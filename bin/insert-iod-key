#!perl

# DATE
# VERSION

use 5.010;
use strict;
use warnings;

use App::IODUtils;
use Perinci::CmdLine::Any;

our %SPEC;
$SPEC{insert_iod_key} = {
    v => 1.1,
    summary => 'Insert a key to IOD configuration file',
    args_groups => [
        {args=>[qw/add ignore replace/], rel=>'one_of'},
        {args=>[qw/top linum/], rel=>'one_of'},
    ],
    args => {
        %App::IODUtils::common_args,
        %App::IODUtils::inplace_arg,
        section => {
            schema  => 'str*',
            req     => 1,
            pos     => 1,
        },
        key => {
            schema  => 'str*',
            req     => 1,
            pos     => 2,
        },
        value => {
            summary => '(Raw) value',
            schema  => 'str*',
            req     => 1,
            pos     => 3,
        },
        create_section => {
            summary => 'When section does not exist, create it first',
            schema => [bool => is=>1],
        },
        add => {
            summary => 'When key already exists, add',
            schema => [bool => is=>1],
        },
        ignore => {
            summary => 'When key already exists, do nothing',
            schema => [bool => is=>1],
        },
        replace => {
            summary => 'When key already exists, delete previous key(s) first',
            schema => [bool => is=>1],
        },
        top => {
            summary => 'Add to the beginning of section instead of end',
            schema => [bool => is=>1],
        },
        linum => {
            summary => 'Put key in a specific line number '.
                '(line number starts from 1)',
            schema => ['int*' => min=>1],
        },
    },
};
sub insert_iod_key {
    require Config::IOD;

    my %args = @_;

    my $parser = Config::IOD->new(enable_expr=>$args{enable_expr});

    if ($args{inplace}) {
        return [412, "To use in-place editing, please supply an actual file"]
            if @{ $args{-cmdline_srcfilenames_iod} // []} == 0;
        return [412, "To use in-place editing, please supply only one file"]
            if @{ $args{-cmdline_srcfilenames_iod} // []} > 1;
    }

    my $doc = $parser->read_string($args{iod});

    $doc->insert_key(
        {
            create_section => $args{create_section},
            add     => $args{add},
            ignore  => $args{ignore},
            replace => $args{replace},
            top     => $args{top},
            linum   => $args{linum},
        },
        $args{section}, $args{key}, $args{value},
    );

    if ($args{inplace}) {
        require File::Slurper;
        File::Slurper::write_text(
            $args{-cmdline_srcfilenames_iod}[0], $doc->as_string);
        [200, "OK"];
    } else {
        [200, "OK", $doc->as_string, {'cmdline.skip_format'=>1}];
    }
}

Perinci::CmdLine::Any->new(
    url => '/main/insert_iod_key',
)->run;

# ABSTRACT:
# PODNAME:

=head1 SYNOPSIS

Basic usage:

 % insert-iod-key /path/to/file.iod section key value



