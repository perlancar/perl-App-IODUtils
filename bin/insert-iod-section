#!perl

# DATE
# VERSION

use 5.010;
use strict;
use warnings;

use App::IODUtils;
use Perinci::CmdLine::Any;

our %SPEC;
$SPEC{insert_iod_section} = {
    v => 1.1,
    summary => 'Insert an new empty section to IOD configuration file',
    args_groups => [
        {args=>[qw/add ignore/], rel=>'one_of'},
        {args=>[qw/top linum/], rel=>'one_of'},
    ],
    args => {
        %App::IODUtils::common_args,
        %App::IODUtils::inplace_arg,
        section => {
            schema  => 'str*',
            req     => 1,
            pos     => 1,
        },
        add => {
            summary => 'When section already exists, add another',
            schema => [bool => is=>1],
        },
        ignore => {
            summary => 'When section already exists, do nothing',
            schema => [bool => is=>1],
        },
        top => {
            summary => 'Add to the beginning of file instead of end',
            schema => [bool => is=>1],
        },
        comment => {
            summary => 'Add comment',
            schema => ['str*'],
        },
        linum => {
            summary => 'Put section line at a specific line number '.
                '(line number starts from 1)',
            schema => ['int*' => min=>1],
        },
    },
};
sub insert_iod_section {
    require Config::IOD;

    my %args = @_;
    App::IODUtils::_check_inplace(\%args);

    my $parser = Config::IOD->new(enable_expr=>$args{enable_expr});

    my $doc = $parser->read_string($args{iod});

    $doc->insert_section(
        {
            add     => $args{add},
            ignore  => $args{ignore},
            top     => $args{top},
            comment => $args{comment},
            linum   => $args{linum},
        },
        $args{section},
    );

    App::IODUtils::_return_mod_result(\%args, $doc);
}

Perinci::CmdLine::Any->new(
    url => '/main/insert_iod_section',
)->run;

# ABSTRACT:
# PODNAME:

=head1 SYNOPSIS

Basic usage:

 % insert-iod-section /path/to/file.iod section



